<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Angle" xml:space="preserve">
    <value>角度</value>
  </data>
  <data name="BackgroundColor" xml:space="preserve">
    <value>背景色</value>
  </data>
  <data name="BorderSize" xml:space="preserve">
    <value>边框大小</value>
  </data>
  <data name="BrokenDecorator" xml:space="preserve">
    <value>断线装饰</value>
  </data>
  <data name="CircleDecorator" xml:space="preserve">
    <value>圆圈装饰</value>
  </data>
  <data name="Color" xml:space="preserve">
    <value>颜色</value>
  </data>
  <data name="CombinedDecorator" xml:space="preserve">
    <value>合并装饰</value>
  </data>
  <data name="Count" xml:space="preserve">
    <value>数量</value>
  </data>
  <data name="Decorator" xml:space="preserve">
    <value>装饰元素</value>
  </data>
  <data name="Edge" xml:space="preserve">
    <value>线段</value>
  </data>
  <data name="EdgeWidth" xml:space="preserve">
    <value>路径宽度</value>
  </data>
  <data name="EliminatorDecorator" xml:space="preserve">
    <value>抗体装饰</value>
  </data>
  <data name="End" xml:space="preserve">
    <value>终点</value>
  </data>
  <data name="EndDecorator" xml:space="preserve">
    <value>终点装饰</value>
  </data>
  <data name="ExportHeight" xml:space="preserve">
    <value>导出高度</value>
  </data>
  <data name="ExportWidth" xml:space="preserve">
    <value>导出宽度</value>
  </data>
  <data name="Face" xml:space="preserve">
    <value>面</value>
  </data>
  <data name="FaceDecorationScale" xml:space="preserve">
    <value>面装饰元素缩放</value>
  </data>
  <data name="First" xml:space="preserve">
    <value>甲</value>
  </data>
  <data name="Font" xml:space="preserve">
    <value>字体</value>
  </data>
  <data name="FontFamily" xml:space="preserve">
    <value>字体名</value>
  </data>
  <data name="ForegroundColor" xml:space="preserve">
    <value>前景色</value>
  </data>
  <data name="GraphElementColor" xml:space="preserve">
    <value>网格颜色</value>
  </data>
  <data name="GraphicsUnit" xml:space="preserve">
    <value>图像单位</value>
  </data>
  <data name="HollowTetrisDecorator" xml:space="preserve">
    <value>空心俄罗斯方块装饰</value>
  </data>
  <data name="Indexes" xml:space="preserve">
    <value>编号</value>
  </data>
  <data name="Length" xml:space="preserve">
    <value>长度</value>
  </data>
  <data name="MarginSize" xml:space="preserve">
    <value>边距大小</value>
  </data>
  <data name="MetaData" xml:space="preserve">
    <value>元数据</value>
  </data>
  <data name="Node" xml:space="preserve">
    <value>结点</value>
  </data>
  <data name="Nodes" xml:space="preserve">
    <value>结点</value>
  </data>
  <data name="PointDecorator" xml:space="preserve">
    <value>点装饰</value>
  </data>
  <data name="PuzzleTitle" xml:space="preserve">
    <value>谜题标题</value>
  </data>
  <data name="RingDecorator" xml:space="preserve">
    <value>圆环装饰</value>
  </data>
  <data name="Second" xml:space="preserve">
    <value>乙</value>
  </data>
  <data name="Shapes" xml:space="preserve">
    <value>形状</value>
  </data>
  <data name="Size" xml:space="preserve">
    <value>大小</value>
  </data>
  <data name="SquareDecorator" xml:space="preserve">
    <value>色块装饰</value>
  </data>
  <data name="StarDecorator" xml:space="preserve">
    <value>星形装饰</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>起点</value>
  </data>
  <data name="StartDecorator" xml:space="preserve">
    <value>起点装饰</value>
  </data>
  <data name="Style" xml:space="preserve">
    <value>样式</value>
  </data>
  <data name="TetrisDecorator" xml:space="preserve">
    <value>俄罗斯方块装饰</value>
  </data>
  <data name="TetrisScale" xml:space="preserve">
    <value>俄罗斯方块缩放</value>
  </data>
  <data name="TetrisTemplate" xml:space="preserve">
    <value>俄罗斯方块模板</value>
  </data>
  <data name="Text" xml:space="preserve">
    <value>文本</value>
  </data>
  <data name="TextDecorator" xml:space="preserve">
    <value>文本装饰</value>
  </data>
  <data name="TriangleDecorator" xml:space="preserve">
    <value>三角装饰</value>
  </data>
  <data name="X" xml:space="preserve">
    <value>X坐标</value>
  </data>
  <data name="Y" xml:space="preserve">
    <value>Y坐标</value>
  </data>
</root>